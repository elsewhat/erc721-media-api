openapi: 3.0.1
info:
  title: 'ERC721 Media API'
  description: |
    The ERC721 Media API provides a standardized approach for allowing third party access to  media files for ERC721 NFTs if the owner gives permission. 
    
    Media files may for example be rigged:  
    1. 3D models in VRM, FBX and GLB formats to be used in open worlds such as Cryptovoxels, Sandbox, Decentraland or Somnium
    1. 2D sprite sheets to use in 2D based worlds such as worldwideweb3
    
    The media files in question are *not* stored on the blockchain, but are securely stored as part of the website for the ERC721 collection owner.
    
    ### Requesting owner permission
    To grant access to the media files, the NFT owner must sign a message using web3 on the website for the ERC721 collection owner. This will trigger a redirect to a callback URI defined by third party application. 
    
    The overall authentication flow is inspired by the [OAuth Authorization Code Flow](https://datatracker.ietf.org/doc/html/rfc6749#section-4.1.1).
    
    Endpoint [`/authorize-uri`](#operation/GetAuthorizeURI)
    
    
    
  version: "0.1.0"

  contact:
    name: Contact via github issues
    url: https://github.com/elsewhat/nft-erc721-media-api
  
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/

  x-logo:
    url: 'https://elsewhat.github.io/nft-erc721-media-api/img/logo.png'
    altText: Logo
  
externalDocs:
  description: API documentation
  url: 'https://elsewhat.github.io/nft-erc721-media-api'
  
servers:
  - url: https://meebits.larvalabs.com/api/v1/
    description: |
      NFT collection #1 (contract 0x12345)
  - url: https://api.bayc.com/api/v1/
    description: |
      NFT collection #2 (contract 0x56789)  

security:
  - bearerAuth: [ ]
  - apiKey: [ ]

tags:
  - name: Accounts
  - name: Authorize

x-tagGroups:
  - name: Authorize
    tags:
      - Authorize  
  - name: Accounts
    tags:
      - Accounts  

paths:
  /authorize:
    get:
      operationId: GetAuthorizeURI
      summary: Redirect to authorize URI
      description: |
        ### Overview
        Initiate the authorization flow where the NFT owner must sign a message using web3 on the website for the ERC721 collection owner. 
        
        A successful signature verification will result in a `HTTP 302 redirect` to the provided `callbackURI` which should be part of third party application requiring access to the media file.
        
        ### Important information
        Note: The response of this API call is normally a `HTTP 302 redirect` where the `Location` HTTP header contains the URI the NFT owner must visit in order to prove ownership.
      tags:
        - Authorize
      parameters:
        - in: query
          name: callbackURI
          description: | 
            URI to redirect back to after owner has successfully proved ownership through web3 signature
          required: true
          schema:
            type: string
            example: 'https%3A%2F%2Fmeebits.larvalabs.com%2Fmeebits%2FtestCallback'
        - in: query
          name: state
          description: |
            An opaque value used by the client to maintain state between the request and callback.  The authorization server includes this value when redirecting the user-agent back after owner has successfully proved ownership through web3 signature.  The parameter SHOULD be used for preventing cross-site request forgery attacks and should not be guessable. A GUID or hash of the user session could be used
          required: false
          schema:
            type: string
            example: 73ec3d0a-b206-4840-a493-2c20a8d893bb         
      responses:
        '302':
          description: Request successful and authorize URI is in the `Location` HTTP header
        '503':
          description: Service temporarily not available. Please try again later
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'  

  /accounts/{account-address}:
    get:
      operationId: LookupERC721MediaByAccount
      summary: Lookup ERC721 media by account for this collection
      description: |
        ### Overview
        TBD
      tags:
        - Accounts
      parameters:
        - in: path
          name: account-address
          description: The ethereum wallet address of the user
          required: true
          schema:
            type: string
            example: '0x1912365cf48b8d0cd9081958e69b7a1708249123'
      responses:
        '200':
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ContractTokens'
          description: Request successful
        '404':
          description: Account does not exist or does not own any ERC721 NFTs for this collection
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'                         
        default:
          description: Unexpected error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'           

   

components:
  schemas:
    ProblemDetails:
          type: object
          properties:
            type:
              type: string
              description: Reference to HTTP status definition
              example: 'https://tools.ietf.org/html/rfc7231#section-6.5.1'
              nullable: true
            title:
              type: string
              description: Description of error
              example: 'One or more validation errors occurred.'
              nullable: true
            status:
              type: integer
              description: HTTP status code
              example: 400
              format: int32
              nullable: true
            traceId:
              type: string
              description: Request id to be used for support
              example: '00-d9dc368e6caec4449a64e798dad1b5b2-7d82bdde82c9474a-00'
            errors:
              type: object
              description: Detailed information about error
              additionalProperties:
                type: object
                additionalProperties: false
              nullable: true
              readOnly: true
          additionalProperties: false
          
    Pagination:
      type: object
      properties:
        total_count:
          type: integer
          example: 20
          description: Total number of responses
        incomplete_results:
          type: boolean
          example: false
          description: Are there additional data in other pages
          
    ContractTokens:
      allOf:
        - $ref: '#/components/schemas/Pagination'    
      type: object
      properties:
        tokens:
            type: array
            items:
              $ref: '#/components/schemas/ContractToken'
              
    ContractToken:
        type: object
        properties:
          contract:
            type: string
            example: '0x7Bd29408f11D2bFC23c34f18275bBf23bB716Bc7'
            description: Contract address
          tokenId:
            type: string
            example: '13396'
            description: Token id in the contract
          owner: 
            $ref: '#/components/schemas/ContractToken'
          erc721:
            $ref: '#/components/schemas/ERC721'
          media:
            type: array
            items:
              $ref: '#/components/schemas/Media'          
          
    
    TokenOwner: 
        type: object
        properties:
          address:    
            type: string
            example: '0x1234...'
            description: Wallet address of owner
            
    ERC721: 
        type: object
        description: ERC721 Metadata JSON Schema 
        properties:
          name:    
            type: string
            example: 'Meebit #13396'
            description: Name of ERC721 token
          description:
            type: string
            example: 'Meebit #13396'
          image:
            type: string
            example: 'https://meebits.larvalabs.com/meebitimages/characterimage?index\u003d13386\u0026type\u003dfull\u0026imageType\u003djpg'          
          attributes:
            type: array
            items:
              $ref: '#/components/schemas/ERC721Attribute'
              
    ERC721Attribute:
      type: object
      description: ERC721 attributes
      properties:
        trait_type:
          type: string
          example: Shirt
        value:
          type: string
          example: Hoodie up  
          
    Media:
      type: object
      description: Media available for the owner of the ERC721
      properties:
        mediaType: 
          type: string
          description: | 
            Media type as defined by https://www.iana.org/assignments/media-types/media-types.xhtml
            Official media type may not exist for all files types (for example FBX and VRM)
          example: 'model/gltf-binary'
          nullable: true
        mediaFileEnding:
          type: string
          description: File ending for the media which can be used if mediaType is not defined
          example: 'gltf'
        uri:
          type: string
          description: | 
            Download link for the media
        uriAuthenticationMethod:
          type: string
          description: |
            Type of authentication for proving ownership of ERC721
          enum: ['AccessTokenQueryParameter', 'AuthorizationBearerHTTPHeader']
        uriExpires:
          type: string
          format: date-time
          description: | 
            Defines if the uri expires at a certain time (for example to require reauthentication)
