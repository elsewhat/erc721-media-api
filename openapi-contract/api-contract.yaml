openapi: 3.0.1
info:
  title: 'NFT ERC721 Media API'
  description: |
    TODO
  version: "0.1.0"

  contact:
    name: Contact via github issues
    url: https://github.com/elsewhat/nft-erc721-media-api
  
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/

  x-logo:
    url: 'https://elsewhat.github.io/nft-erc721-media-api/img/logo.png'
    altText: Logo
  
externalDocs:
  description: API documentation
  url: 'https://elsewhat.github.io/nft-erc721-media-api'
  
servers:
  - url: https://meebits.larvalabs.com/api/v1/
    description: |
      NFT collection #1 (contract 0x12345)
  - url: https://api.bayc.com/api/v1/
    description: |
      NFT collection #2 (contract 0x56789)  

security:
  - bearerAuth: [ ]
  - apiKey: [ ]

tags:
  - name: Accounts

x-tagGroups:
  - name: Accounts
    tags:
      - Accounts  

paths:
  /accounts/{account-address}:
    get:
      operationId: LookupERC721MediaByAccount
      summary: Lookup ERC721 media by account for this collection
      description: |
        ### Overview
        TBD
      tags:
        - Accounts
      parameters:
        - in: path
          name: account-address
          description: The ethereum wallet address of the user
          required: true
          schema:
            type: string
            example: '0x1912365cf48b8d0cd9081958e69b7a1708249123'
      responses:
        '200':
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ContractTokens'
          description: Request successful
        '404':
          description: Account does not exist or does not own any ERC721 NFTs for this collection
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'                         
        default:
          description: Unexpected error
          content: 
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'           

   

components:
  schemas:
    ProblemDetails:
          type: object
          properties:
            type:
              type: string
              description: Reference to HTTP status definition
              example: 'https://tools.ietf.org/html/rfc7231#section-6.5.1'
              nullable: true
            title:
              type: string
              description: Description of error
              example: 'One or more validation errors occurred.'
              nullable: true
            status:
              type: integer
              description: HTTP status code
              example: 400
              format: int32
              nullable: true
            traceId:
              type: string
              description: Request id to be used for support
              example: '00-d9dc368e6caec4449a64e798dad1b5b2-7d82bdde82c9474a-00'
            errors:
              type: object
              description: Detailed information about error
              additionalProperties:
                type: object
                additionalProperties: false
              nullable: true
              readOnly: true
          additionalProperties: false
          
    Pagination:
      type: object
      properties:
        total_count:
          type: integer
          example: 20
          description: Total number of responses
        incomplete_results:
          type: boolean
          example: false
          description: Are there additional data in other pages
          
    ContractTokens:
      allOf:
        - $ref: '#/components/schemas/Pagination'    
      type: object
      properties:
        tokens:
            type: array
            items:
              $ref: '#/components/schemas/ContractToken'
              
    ContractToken:
        type: object
        properties:
          contract:
            type: string
            example: '0x7Bd29408f11D2bFC23c34f18275bBf23bB716Bc7'
            description: Contract address
          tokenId:
            type: string
            example: '13396'
            description: Token id in the contract
          owner: 
            $ref: '#/components/schemas/ContractToken'
          erc721:
            $ref: '#/components/schemas/ERC721'
          media:
            type: array
            items:
              $ref: '#/components/schemas/Media'          
          
    
    TokenOwner: 
        type: object
        properties:
          address:    
            type: string
            example: '0x1234...'
            description: Wallet address of owner
            
    ERC721: 
        type: object
        description: ERC721 Metadata JSON Schema 
        properties:
          name:    
            type: string
            example: 'Meebit #13396'
            description: Name of ERC721 token
          description:
            type: string
            example: 'Meebit #13396'
          image:
            type: string
            example: 'https://meebits.larvalabs.com/meebitimages/characterimage?index\u003d13386\u0026type\u003dfull\u0026imageType\u003djpg'          
          attributes:
            type: array
            items:
              $ref: '#/components/schemas/ERC721Attribute'
              
    ERC721Attribute:
      type: object
      description: ERC721 attributes
      properties:
        trait_type:
          type: string
          example: Shirt
        value:
          type: string
          example: Hoodie up  
          
    Media:
      type: object
      description: Media available for the owner of the ERC721
      properties:
        mediaType: 
          type: string
          description: | 
            Media type as defined by https://www.iana.org/assignments/media-types/media-types.xhtml
            Official media type may not exist for all files types (for example FBX and VRM)
          example: 'model/gltf-binary'
          nullable: true
        mediaFileEnding:
          type: string
          description: File ending for the media which can be used if mediaType is not defined
          example: 'gltf'
        uri:
          type: string
          description: | 
            Download link for the media
        uriAuthenticationMethod:
          type: string
          description: |
            Type of authentication for proving ownership of ERC721
          enum: ['AccessTokenQueryParameter', 'AuthorizationBearerHTTPHeader']
        uriExpires:
          type: string
          format: date-time
          description: | 
            Defines if the uri expires at a certain time (for example to require reauthentication)
